--Duel Mode: Pack Opening
local s,id=GetID()
function s.initial_effect(c)
	Synchro.AddProcedure(c,nil,1,1,Synchro.NonTuner(nil),1,99)
	Xyz.AddProcedure(c,nil,4,2)
	Pendulum.AddProcedure(c,false)
	--skill
	local e1=Effect.CreateEffect(c) 
	e1:SetProperty(EFFECT_FLAG_UNCOPYABLE+EFFECT_FLAG_CANNOT_DISABLE+EFFECT_FLAG_CANNOT_NEGATE)
	e1:SetType(EFFECT_TYPE_FIELD+EFFECT_TYPE_CONTINUOUS)
	e1:SetCode(EVENT_STARTUP)
	e1:SetRange(0x5f)
	e1:SetCost(s.cost)
	e1:SetOperation(s.operation)
	c:RegisterEffect(e1)
end
function s.cost(e,tp)
	Duel.SendtoDeck(e:GetHandler(),tp,-2,REASON_RULE)
end
function s.operation(e,tp,eg,ep,ev,re,r,rp)
	--Delete Your Cards
	s.DeleteDeck(tp)

	--Choose Game Mode
	local Option1={}
	--table.insert(Option1,aux.Stringid(id,0)) --Duel Mode: Pack Opening
	--table.insert(Option1,aux.Stringid(id,1)) --Draft: Construct your deck among packs (max.24) and cards (min.1) you choose.
	--table.insert(Option1,aux.Stringid(id,2)) --AutoDeck: Your Deck will be constrocted automatically among packs (max.12) you choose.
	--table.insert(Option1,aux.Stringid(id,3)) --Starter: Play with preconstructed deck
	table.insert(Option1,aux.Stringid(id,4)) --Rush Battle: Pick 1 Strongest Battle Deck, then pick any number of Deck Modification Packs
	local gamemod=Duel.SelectOption(tp,false,table.unpack(Option1))+4

	--If Special then Special Mode
	if gamemod==4 then s.RushBattle(e,tp) return end

	--Choose Game Format
	local Option2={}
		table.insert(Option2,aux.Stringid(id+10101,1))
		table.insert(Option2,aux.Stringid(id+10101,2))
	local format=Duel.SelectOption(tp,false,table.unpack(Option2))+1

	--Choose Game Series
	local Option3={}
	if format==1 then
		table.insert(Option3,aux.Stringid(id+10102,1))
	elseif format==2 then
		table.insert(Option3,aux.Stringid(id+20101,1))
		table.insert(Option3,aux.Stringid(id+20101,2))
		table.insert(Option3,aux.Stringid(id+20101,3))
	end
	local series=Duel.SelectOption(tp,false,table.unpack(Option3))+1

	--Lets Go!
	if gamemod==0 then
		s.CheckPack(e,tp,format,series)
	elseif gamemod==1 then
		s.DraftMode(e,tp,format,series)
	elseif gamemod==2 then
		s.AutoDeckMode(e,tp,format,series)
	elseif gamemod==3 then
		s.Preconstructed(e,tp,format,series)
	end

	--Check and Go
	--local g=Duel.GetFieldGroup(tp,LOCATION_EXTRA+LOCATION_HAND+LOCATION_DECK,0)
	--Duel.ConfirmCards(tp,g)
end
function s.DeleteDeck(tp)
	local del=Duel.GetFieldGroup(tp,LOCATION_EXTRA+LOCATION_HAND+LOCATION_DECK,0)
	Duel.SendtoDeck(del,tp,-2,REASON_RULE)
end
function s.CheckPack(e,tp,format,series)
	--Choose Pack
	local packlist={}
	for i=1,#s.Pack[format][series] do
		table.insert(packlist,s.Pack[format][series][i][0])
	end
	repeat
			local packopen={}
			local packid=Duel.SelectCardsFromCodes(tp,1,1,false,false,table.unpack(packlist))
			local formatid=format*10000
			local seriesid=series*100
			local pack=packid-id-formatid-seriesid
			for rarity=1,5 do
				for i=1,#s.Pack[format][series][pack][rarity] do
					table.insert(packopen,s.Pack[format][series][pack][rarity][i])
				end
			end
			Duel.SelectCardsFromCodes(tp,1,1,false,false,table.unpack(packopen))
	until Duel.SelectYesNo(tp,aux.Stringid(id,3))==0
end
function s.DraftMode(e,tp,format,series)
	--Choose Pack
	local packlist={}
	for i=1,#s.Pack[format][series] do
		table.insert(packlist,s.Pack[format][series][i][0])
	end
	local num=Duel.AnnounceNumberRange(tp,4,24)
	for i=1,num do
		local packid=Duel.SelectCardsFromCodes(tp,1,1,false,false,table.unpack(packlist))
		local formatid=format*10000
		local seriesid=series*100
		local pack=packid-id-formatid-seriesid
		local tc=Duel.CreateToken(tp,s.Pack[format][series][pack][0])
		Duel.SendtoGrave(tc,REASON_RULE)
		local cpp=s.Pack[format][series][pack][10]
		for i=1,cpp do
			local rarity=1
			if i==8 then rarity=2 end
			if i==cpp then
				local chance=Duel.GetRandomNumber(1,100)
				if chance>0 and #s.Pack[format][series][pack][5]>0 then rarity=5 end
				if chance>4 and #s.Pack[format][series][pack][4]>0 then rarity=4 end
				if chance>8 and #s.Pack[format][series][pack][3]>0 then rarity=3 end
				if chance>16 and #s.Pack[format][series][pack][2]>0 then rarity=2 end
			end
			local card=Duel.GetRandomNumber(1,#s.Pack[format][series][pack][rarity])
			local tc=Duel.CreateToken(tp,s.Pack[format][series][pack][rarity][card])
			Duel.SendtoHand(tc,tp,REASON_RULE)
			local e1=Effect.CreateEffect(e:GetHandler())
			e1:SetDescription(aux.Stringid(id+10103,rarity))
			e1:SetType(EFFECT_TYPE_SINGLE)
			e1:SetProperty(EFFECT_FLAG_CLIENT_HINT)
			e1:SetCode(EFFECT_INDESTRUCTABLE_EFFECT)
			e1:SetValue(0)
			tc:RegisterEffect(e1)
		end
		Duel.ShuffleHand(tp)
		local add=Duel.GetFieldGroup(tp,LOCATION_HAND,0):Select(tp,1,5,nil)
		Duel.SendtoDeck(add,tp,1,REASON_RULE)
		local del=Duel.GetFieldGroup(tp,LOCATION_HAND,0)
		Duel.SendtoDeck(del,tp,-2,REASON_RULE)
	end
	local del=Duel.GetFieldGroup(tp,LOCATION_GRAVE,0)
	Duel.SendtoDeck(del,tp,-2,REASON_RULE)
end
function s.AutoDeckMode(e,tp,format,series)
	--Choose Pack
	local packlist={}
	for i=1,#s.Pack[format][series] do
		table.insert(packlist,s.Pack[format][series][i][0])
	end
	local num=Duel.AnnounceNumberRange(tp,3,12)
	for i=1,num do
		local packid=Duel.SelectCardsFromCodes(tp,1,1,false,false,table.unpack(packlist))
		local formatid=format*10000
		local seriesid=series*100
		local pack=packid-id-formatid-seriesid
		local tc=Duel.CreateToken(tp,s.Pack[format][series][pack][0])
		Duel.SendtoGrave(tc,REASON_RULE)
		local cpp=s.Pack[format][series][pack][10]
		for i=1,cpp do
			local rarity=1
			if i==8 then rarity=2 end
			if i==cpp then
				local chance=Duel.GetRandomNumber(1,100)
				if chance>0 and #s.Pack[format][series][pack][5]>0 then rarity=5 end
				if chance>4 and #s.Pack[format][series][pack][4]>0 then rarity=4 end
				if chance>8 and #s.Pack[format][series][pack][3]>0 then rarity=3 end
				if chance>16 and #s.Pack[format][series][pack][2]>0 then rarity=2 end
			end
			local card=Duel.GetRandomNumber(1,#s.Pack[format][series][pack][rarity])
			local tc=Duel.CreateToken(tp,s.Pack[format][series][pack][rarity][card])
			Duel.SendtoHand(tc,tp,REASON_RULE)
			local e1=Effect.CreateEffect(e:GetHandler())
			e1:SetDescription(aux.Stringid(id+10103,rarity))
			e1:SetType(EFFECT_TYPE_SINGLE)
			e1:SetProperty(EFFECT_FLAG_CLIENT_HINT)
			e1:SetCode(EFFECT_INDESTRUCTABLE_EFFECT)
			e1:SetValue(0)
			tc:RegisterEffect(e1)
		end
		Duel.ShuffleHand(tp)
		local add=Duel.GetFieldGroup(tp,LOCATION_HAND,0)
		add:Select(tp,0,1,nil)
		Duel.SendtoDeck(add,tp,1,REASON_RULE)
	end
	local del=Duel.GetFieldGroup(tp,LOCATION_GRAVE,0)
	Duel.SendtoDeck(del,tp,-2,REASON_RULE)
end
function s.Preconstructed(e,tp,format,series)
	--Choose Pack
	local packlist={}
	for i=1,#s.Pack[format][series] do
		table.insert(packlist,s.Pack[format][series][i][0])
	end
	local packid=Duel.SelectCardsFromCodes(tp,1,1,false,false,table.unpack(packlist))
	local formatid=format*10000
	local seriesid=series*100
	local pack=packid-id-formatid-seriesid
	local tc=Duel.CreateToken(tp,s.Pack[format][series][pack][0])
	Duel.SendtoGrave(tc,REASON_RULE)
	--Rarity
	local rarity=1
	if #s.Pack[format][series][pack][1]>0 then rarity=2 end
	if #s.Pack[format][series][pack][2]>0 then rarity=3 end
	if #s.Pack[format][series][pack][3]>0 then rarity=4 end
	for i=1,rarity do
		for code,code2 in ipairs(s.Pack[format][series][pack][i]) do
			local tc=Duel.CreateToken(tp,code2)
			Duel.SendtoDeck(tc,tp,1,REASON_RULE)
			local e1=Effect.CreateEffect(e:GetHandler())
			e1:SetDescription(aux.Stringid(id+10103,i))
			e1:SetType(EFFECT_TYPE_SINGLE)
			e1:SetProperty(EFFECT_FLAG_CLIENT_HINT)
			e1:SetCode(EFFECT_INDESTRUCTABLE_EFFECT)
			e1:SetValue(0)
			tc:RegisterEffect(e1)
		end
	end
	local del=Duel.GetFieldGroup(tp,LOCATION_GRAVE,0)
	Duel.SendtoDeck(del,tp,-2,REASON_RULE)
end
function s.RushBattle(e,tp)
	--Choose Battle Deck
	local decklist={}
	for i=1,#s.Pack[2][2] do
		table.insert(decklist,s.Pack[2][2][i][0])
	end
	local deckid=Duel.SelectCardsFromCodes(tp,1,1,false,false,table.unpack(decklist))
	local deck=deckid-id-20000-200
	local tc=Duel.CreateToken(tp,s.Pack[2][2][deck][0])
	Duel.MoveToField(tc,tp,tp,LOCATION_MZONE,POS_FACEUP_ATTACK,true,(1<<5))
	for code,code2 in ipairs(s.Pack[2][2][deck][1]) do
		local tc=Duel.CreateToken(tp,code2)
		Duel.SendtoDeck(tc,tp,1,REASON_RULE)
		local e1=Effect.CreateEffect(e:GetHandler())
		e1:SetDescription(aux.Stringid(id+10103,1))
		e1:SetType(EFFECT_TYPE_SINGLE)
		e1:SetProperty(EFFECT_FLAG_CLIENT_HINT)
		e1:SetCode(EFFECT_INDESTRUCTABLE_EFFECT)
		e1:SetValue(0)
		tc:RegisterEffect(e1)
	end

	--Choose Deck Modification
	local num=Duel.AnnounceNumberRange(tp,1,10)
	local packlist={}
	for i=1,#s.Pack[2][3] do
		table.insert(packlist,s.Pack[2][3][i][0])
	end
	for ip=1,num do
		--Choose Pack
		local packid=Duel.SelectCardsFromCodes(tp,1,1,false,false,table.unpack(packlist))
		local pack=packid-id-20000-300
		local tc=Duel.CreateToken(tp,s.Pack[2][3][pack][0])
		Duel.MoveToField(tc,tp,tp,LOCATION_MZONE,POS_FACEUP_ATTACK,true,(1<<6))
		local cpp=s.Pack[2][3][pack][10]
		for ic=1,cpp do
			--Pack Rarity (3 Common, 1 Rare, 1 Rare+)
			local chance=Duel.GetRandomNumber(1,100)
			local rarity=1
			if ic==cpp-1 then
				rarity=2
			elseif ic==cpp then
				--Chance 4%
				if chance>0 and #s.Pack[2][3][pack][4]>0 then rarity=4 end
				--Chance 8%
				if chance>4 and #s.Pack[2][3][pack][3]>0 then rarity=3 end
				--Chance 88%
				if chance>12 and #s.Pack[2][3][pack][2]>0 then rarity=2 end
				if ip==num then rarity=4 end
			end
			--Guaraanteed 1 Ultra Rare
			--Open Pack
			local card=Duel.GetRandomNumber(1,#s.Pack[2][3][pack][rarity])
			local tc=Duel.CreateToken(tp,s.Pack[2][3][pack][rarity][card])
			if ic<4 then
				Duel.MoveToField(tc,tp,tp,LOCATION_SZONE,POS_FACEUP_ATTACK,true,(1<<ic))
			else
				Duel.MoveToField(tc,tp,tp,LOCATION_MZONE,POS_FACEUP_ATTACK,true,(1<<ic-3))
			end
			local e1=Effect.CreateEffect(e:GetHandler())
			e1:SetDescription(aux.Stringid(id+10103,rarity))
			e1:SetType(EFFECT_TYPE_SINGLE)
			e1:SetProperty(EFFECT_FLAG_CLIENT_HINT)
			e1:SetCode(EFFECT_INDESTRUCTABLE_EFFECT)
			e1:SetValue(0)
			tc:RegisterEffect(e1)
		end
		local add=Duel.GetFieldGroup(tp,LOCATION_MZONE+LOCATION_SZONE,0):Filter(Card.IsSequence,nil,0,1,2,3,4):Select(tp,0,5,nil)
		Duel.SendtoDeck(add,tp,1,REASON_RULE)
		local del=Duel.GetFieldGroup(tp,LOCATION_MZONE+LOCATION_SZONE,0):Filter(Card.IsSequence,nil,0,1,2,3,4)
		Duel.SendtoDeck(del,tp,-2,REASON_RULE)
		Duel.SendtoGrave(tc,REASON_RULE)
	end

	--Add Fusion card
	local fusion=Duel.GetMatchingGroupCount(Card.IsType,tp,LOCATION_EXTRA,0,nil,TYPE_FUSION)
	local FusionOption={}
	if fusion>0 then
		table.insert(FusionOption,aux.Stringid(id+20102,1))
	end
	if fusion>1 then
		table.insert(FusionOption,aux.Stringid(id+20102,2))
	end
	if fusion>2 then
		table.insert(FusionOption,aux.Stringid(id+20102,3))
	end
	local FusionCount=Duel.SelectOption(tp,false,table.unpack(FusionOption))+1
	for i=1,FusionCount do
		local tc=Duel.CreateToken(tp,160204050)
		Duel.SendtoDeck(tc,tp,1,REASON_RULE)
	end
	--Delete Packs
	local del=Duel.GetFieldGroup(tp,LOCATION_ONFIELD+LOCATION_GRAVE,0)
	Duel.SendtoDeck(del,tp,-2,REASON_RULE)
end
























s.Pack={}
--[Format][Series][Pack][Rarity]=ID




--Format
s.Pack[1]={} --Main Booster
s.Pack[2]={} --Rush Duel
--Series
s.Pack[1][1]={} --Series 1
s.Pack[2][1]={} --Starter Deck
s.Pack[2][2]={} --Strongest Battle Deck
s.Pack[2][3]={} --Deck Modification Pack



--Vol.1
s.Pack[1][1][1]={}
s.Pack[1][1][1][0]=1999010101
s.Pack[1][1][1][1]={8783685,8944575,9159938,9430387,15150371,15401633,15507080,15510988,18710707,22026707,38142739,38199696,39175982,40374923,46457856,46718686,47695416,52800428,53293545,53581214,53832650,64511793,75356564,75889523,76103675,76184692,84285623,85705804,90357090,90963488}
s.Pack[1][1][1][2]={4206964,53129443,66788016}
s.Pack[1][1][1][3]={15052462,46009906,61854111,77027445,91595718}
s.Pack[1][1][1][4]={6368038,46986414}
s.Pack[1][1][1][5]={}
s.Pack[1][1][1][10]=5



--Booster 1
s.Pack[1][1][2]={}
s.Pack[1][1][2][0]=1999010102
s.Pack[1][1][2][1]={756652,2957055,3732747,3985011,13193642,15042735,15303296,20871001,27094595,27324313,29692206,29948642,37243151 ,49127943,49258578,55550921,56260110,61201220,63125616,63515678,63545455,64154377,75646173,76704943,77603950,78556320,81492226,83678433,88435542,88643173,92944626,97843505,97973387,98898173,99030164}
s.Pack[1][1][2][2]={15052462,46009906,61854111,77027445,91595718}
s.Pack[1][1][2][3]={}
s.Pack[1][1][2][4]={}
s.Pack[1][1][2][5]={}
s.Pack[1][1][2][10]=5


--Vol.2
s.Pack[1][1][3]={}
s.Pack[1][1][3][0]=1999010103
s.Pack[1][1][3][1]={1784619,10859908,11868825,17733394,19159413,20060230,24194033,24348204,31339260,33064647,35282433,41218256,41422426,41544074,53153481,54541900,56283725,56342351,59036972,63308047,63432835,70681994,72842870,75376965,76211194,80770678,84794011,92731455,93553943,94675535}
s.Pack[1][1][3][2]={15025844,73134082,83764719}
s.Pack[1][1][3][3]={4614116,25769732,39774685,51267887,77007920}
s.Pack[1][1][3][4]={28279543,72302403}
s.Pack[1][1][3][5]={}
s.Pack[1][1][3][10]=5



--Booster 2
s.Pack[1][1][4]={}
s.Pack[1][1][4][0]=1999010104
s.Pack[1][1][4][1]={2370081,3606209,10262698,10598400,17511156,18937875,19523799,20541432,21239280,23032273,34290067,37120512,37160778,39897277,40387124,41762634,42625254,45895206,47852924,48531733,55321970,56713552,57405307,68963107,69750536,70924884,72076281,72269672,81820689,82065276,82085619,84990171,92391084,92409659,98374133}
s.Pack[1][1][4][2]={36904469,48365709,72299832,91939608,98795934}
s.Pack[1][1][4][3]={}
s.Pack[1][1][4][4]={}
s.Pack[1][1][4][5]={}
s.Pack[1][1][4][10]=5


--Vol.3
s.Pack[1][1][5]={}
s.Pack[1][1][5][0]=1999010105
s.Pack[1][1][5][1]={1435851,1557499,6367785,6840573,8058240,9076207,9293977,10202894,13039848,16353197,17238333,17535588,29172562,32452818,33066139,33178416,34536276,36304921,36607978,37820550,40200834,43500484,45042329,54844990,55144522,55291359,55444629,60694662,68928540,71407486,73051941,80516007,82542267,85326399,89904598,93788854,95952802,98252586,98818516}
s.Pack[1][1][5][2]={36904469,48365709,72299832,91939608,98795934}
s.Pack[1][1][5][3]={7089711,54652250,63102017}
s.Pack[1][1][5][4]={44519536,74677422}
s.Pack[1][1][5][5]={66889139}
s.Pack[1][1][5][10]=5


--Booster 3
s.Pack[1][1][6]={}
s.Pack[1][1][6][0]=1999010106
s.Pack[1][1][6][1]={732302,3170832,4392470,7225792,7526150,8327462,13429800,14037717,16899564,17092736,17115745,28003512,34320307,35752363,38942059,41061625,42883273,46864967,47060154,47922711,48109103,49791927,52367652,52584282,55210709,56413937,60802233,62403074,69992868,72520073,75559356,75850803,76775123,84916669,95144193}
s.Pack[1][1][6][2]={17814387,43530283,44209392,77622396,80604092}
s.Pack[1][1][6][3]={}
s.Pack[1][1][6][4]={}
s.Pack[1][1][6][5]={}
s.Pack[1][1][6][10]=5


--Vol.4
s.Pack[1][1][7]={}
s.Pack[1][1][7][0]=1999010107
s.Pack[1][1][7][1]={1184620,1761063,2483611,2830619,9653271,13599884,15480588,16972957,21817254,25882881,28593363,33691040,41949033,42348802,43230671,45121025,46247516,55014050,55691901,55784832,55875323,58192742,58314394,67494157,67841515,68846917,68870276,69572024,73481154,76812113,78780140,80141480,81057959,81179446,81386177,86088138,87796900,93221206}
s.Pack[1][1][7][2]={20101223,21323861,56606928,90873992,94716515}
s.Pack[1][1][7][3]={28933734,31560081,40240595}
s.Pack[1][1][7][4]={70781052,8124921,90219263}
s.Pack[1][1][7][5]={12206212}
s.Pack[1][1][7][10]=5


--Booster 4
s.Pack[1][1][8]={}
s.Pack[1][1][8][0]=1999010108
s.Pack[1][1][8][1]={10476868,11250655,11793047,16970158,17968114,20315854,2971090,33413638,34690519,4179849,42418084,43487744,45688586,48305365,50176820,53606874,58831685,6285791,65623423,69140098,71746462,72929454,7359741,74277583,75582395,77456781,79571449,79629370,80727036,81563416,85255550,86100785,86164529,89494469,97590747}
s.Pack[1][1][8][2]={20101223,21323861,56606928,90873992,94716515}
s.Pack[1][1][8][3]={}
s.Pack[1][1][8][4]={}
s.Pack[1][1][8][5]={}
s.Pack[1][1][8][10]=5


--Vol.5
s.Pack[1][1][9]={}
s.Pack[1][1][9][0]=1999010109
s.Pack[1][1][9][1]={10189126,10315429,10538007,12472242,15150365,15237615,16246527,16768387,18180762,19066538,20277860,2118022,21263083,21347810,29802344,3027001,32485271,32809211,38982356,40196604,41392891,46474915,5758500,58861941,5901497,62671448,64501875,70138455,75499502,76446915,7670542,77568553,87756343,88979991,97360116,98049915,98582704,99261403}
s.Pack[1][1][9][2]={26378150,42364257,51228280,77998771,78637313}
s.Pack[1][1][9][3]={25955164,62340868,98434877}
s.Pack[1][1][9][4]={11901678,4031928,41142615,79759861}
s.Pack[1][1][9][5]={}
s.Pack[1][1][9][10]=5


--Booster 5
s.Pack[1][1][10]={}
s.Pack[1][1][10][0]=1999010110
s.Pack[1][1][10][1]={11714098,12436646,16507828,17441953,24068492,28450915,28563545,29402771,29491031,29929832,32569498,33508719,38116136,38289717,46461247,46700124,47319141,49417509,51452091,53830602,54098121,54622031,55567161,60715406,6103114,66672569,72869010,76512652,81843628,93343894,94022093,94119974,94230224,96643568,99510761}
s.Pack[1][1][10][2]={26378150,42364257,51228280,77998771,78637313}
s.Pack[1][1][10][3]={}
s.Pack[1][1][10][4]={}
s.Pack[1][1][10][5]={}
s.Pack[1][1][10][10]=5


--Vol.6
s.Pack[1][1][11]={}
s.Pack[1][1][11][0]=1999010111
s.Pack[1][1][11][1]={10071456,11384280,12146024,15367030,17358176,18246479,20848593,23659124,26202165,41396436,41403766,42591472,43352213,51828629,53829412,55763552,56907389,57935140,60862676,6297941,6400512,69669405,69893315,71950093,74703140,78010363,7805359,80234301,80813021,81618817,8353769,84103702,8471389,87564352,88819587,89272878,94042337}
s.Pack[1][1][11][2]={28470714,67629977,68658728,80741828,8201910}
s.Pack[1][1][11][3]={30778711,46657337,7489323}
s.Pack[1][1][11][4]={3819470,41420027,77414722,98069388}
s.Pack[1][1][11][5]={14141448,41462083}
s.Pack[1][1][11][10]=5


--Booster 6
s.Pack[1][1][12]={}
s.Pack[1][1][12][0]=1999010112
s.Pack[1][1][12][1]={13069066,14977074,16229315,26725158,26902560,30451366,32355828,32751480,40173854,46696593,48649353,50259460,5053103,53119267,53493204,54615781,61831093,62762898,69015963,69780745,70084224,76634149,81686058,82818645,84133008,85448931,90330453,9197735,93920745,94412545,94566432,95288024,9540040,99426834,99518961}
s.Pack[1][1][12][2]={28470714,67629977,68658728,80741828,8201910}
s.Pack[1][1][12][3]={}
s.Pack[1][1][12][4]={}
s.Pack[1][1][12][5]={}
s.Pack[1][1][12][10]=5


--Vol.7
s.Pack[1][1][13]={}
s.Pack[1][1][13][0]=1999010113
s.Pack[1][1][13][1]={14708569,19737320,20394040,21417692,22855882,23771716,24433920,25880422,28546905,30090452,32344688,33621868,33878931,35712107,36151751,38035986,39239728,40453765,40640057,44865098,49587396,53713014,549481,59383041,66602787,66836598,68516705,73911410,84926738,87322377,89112729,89832901,89987208,92667214,93900406,94905343,95265975,98495314,99551425}
s.Pack[1][1][13][2]={24668830,31786629,46918794,50152549,51371017}
s.Pack[1][1][13][3]={52097679,54752875,81480460}
s.Pack[1][1][13][4]={44095762}
s.Pack[1][1][13][5]={}
s.Pack[1][1][13][10]=5


--Booster 7
s.Pack[1][1][14]={}
s.Pack[1][1][14][0]=1999010114
s.Pack[1][1][14][1]={13215230,14181608,14851496,19613556,20436034,24611934,2504891,25109950,25655502,28725004,2906250,29155212,29380133,29616941,34743446,36821538,42431843,45909477,47986555,55337339,55608151,56830749,62121,67724379,68171737,68339286,69455834,7019529,71107816,75390004,78402798,83225447,93889755,94773007,97612389}
s.Pack[1][1][14][2]={24668830,31786629,46918794,50152549,51371017}
s.Pack[1][1][14][3]={}
s.Pack[1][1][14][4]={}
s.Pack[1][1][14][5]={}
s.Pack[1][1][14][10]=5


--Starter Deck Yuga - Cut Through! Sevens Road!!
s.Pack[2][1][1]={}
s.Pack[2][1][1][0]=1999020101
s.Pack[2][1][1][1]={160301002,160301002,160301006,160301006,160301009,160301009,160301009,160301003,160301003,160301003,160301004,160301004,160301004,160301005,160301005,160301005,160301007,160301007,160301007,160301008,160301008,160301008,160301010,160301010,160301010,160301011,160301011,160301011,160301012,160301012,160301012,160301013,160301013,160301014,160301014,160301014}
s.Pack[2][1][1][2]={160301002,160301006,160301013}
s.Pack[2][1][1][3]={160301001}
s.Pack[2][1][1][4]={}
s.Pack[2][1][1][5]={}
s.Pack[2][1][1][10]=40


--Starter Deck Luke - Explosive Supremacy! Dragias!!
s.Pack[2][1][2]={}
s.Pack[2][1][2][0]=1999020102
s.Pack[2][1][2][1]={160302002,160302002,160302003,160302003,160302003,160302004,160302004,160302004,160302005,160302005,160302005,160302006,160302006,160302007,160302007,160302007,160302008,160302008,160302008,160302009,160302009,160302009,160302010,160302010,160302010,160302011,160302011,160302012,160302012,160302012,160302013,160302013,160302013,160302014,160302014,160302014}
s.Pack[2][1][2][2]={160302002,160302006,160302011}
s.Pack[2][1][2][3]={160302001}
s.Pack[2][1][2][4]={}
s.Pack[2][1][2][5]={}
s.Pack[2][1][2][10]=40


--Yuga - Hyper Machine Road
s.Pack[2][2][1]={}
s.Pack[2][2][1][0]=1999020201
s.Pack[2][2][1][1]={160202002,160202001,160202003,160002018,160004015,160001022,160402006,160402005,160303009,160303010,160001033,160001033,160406003,160303013,160406002,160003009,160003015,160003015,160001032,160001032,160001019,160001019,160303019,160001010,160001010,160301007,160301007,160301010,160301010,160301010,160001037,160004039,160202024,160003042,160001038,160402001,160402003,160002046,160002048,160303032}
s.Pack[2][2][1][2]={}
s.Pack[2][2][1][3]={}
s.Pack[2][2][1][4]={}
s.Pack[2][2][1][5]={}
s.Pack[2][2][1][10]=40


--Luke - Dragon's Dragons
s.Pack[2][2][2]={}
s.Pack[2][2][2][0]=1999020202
s.Pack[2][2][2][1]={160003025,160001026,160304003,160002021,160004016,160406009,160002001,160002001,160402002,160001015,160002020,160002020,160003021,160003021,160304012,160001002,160001002,160001002,160001025,160003007,160003007,160001001,160001001,160002019,160002019,160001024,160302010,160302010,160302010,160002042,160001037,160304022,160304023,160003043,160001044,160003056,160001046,160003058,160001047,160304030}
s.Pack[2][2][2][2]={}
s.Pack[2][2][2][3]={}
s.Pack[2][2][2][4]={}
s.Pack[2][2][2][5]={}
s.Pack[2][2][2][10]=40


--Gavin - Fiendish Commander Three Legions
s.Pack[2][2][3]={}
s.Pack[2][2][3][0]=1999020203
s.Pack[2][2][3][1]={160001029,160201001,160004020,160403001,160005021,160305006,160005020,160201002,160201005,160201006,160002026,160002026,160002026,160201004,160201004,160201004,160001012,160201007,160305015,160004038,160004019,160004018,160004018,160406006,160001003,160001003,160001003,160201008,160201008,160201008,160201010,160003044,160201011,160304022,160201012,160305027,160002046,160201014,160305030,160001050}
s.Pack[2][2][3][2]={}
s.Pack[2][2][3][3]={}
s.Pack[2][2][3][4]={}
s.Pack[2][2][3][5]={}
s.Pack[2][2][3][10]=40


--Romin - Psychic Beat
s.Pack[2][2][4]={}
s.Pack[2][2][4][0]=1999020204
s.Pack[2][2][4][1]={160001028,160002025,160306003,160002024,160002024,160201029,160201032,160201032,160201032,160201030,160201030,160201030,160004014,160306009,160201031,160201031,160201033,160201033,160306012,160201034,160201034,160002003,160002003,160002002,160002002,160002023,160005018,160201035,160201035,160201035,160002042,160201038,160406004,160304022,160201012,160002037,160201039,160306026,160201040,160002049}
s.Pack[2][2][4][2]={}
s.Pack[2][2][4][3]={}
s.Pack[2][2][4][4]={}
s.Pack[2][2][4][5]={}
s.Pack[2][2][4][10]=40


--Roa - Demon's Rock
s.Pack[2][2][5]={}
s.Pack[2][2][5][0]=1999020205
s.Pack[2][2][5][1]={160002031,160307002,160005003,160307004,160003013,160003013,160003013,160402004,160402004,160201018,160201018,160201019,160307009,160001011,160001011,160001011,160201020,160201020,160201020,160201021,160201021,160005023,160005023,160002033,160004012,160201022,160201022,160201023,160201023,160004041,160002042,160201024,160304022,160005041,160005042,160001046,160201026,160307026,160201027,160002048}
s.Pack[2][2][5][2]={}
s.Pack[2][2][5][3]={}
s.Pack[2][2][5][4]={}
s.Pack[2][2][5][5]={}
s.Pack[2][2][5][10]=40


--Nail - Maximum Haven
s.Pack[2][2][6]={}
s.Pack[2][2][6][0]=1999020206
s.Pack[2][2][6][1]={160202011,160202010,160202012,160308004,160308005,160202049,160202049,160202049,160202013,160202013,160202013,160006033,160308009,160202014,160202014,160202014,160203022,160203022,160203022,160202015,160202015,160202015,160202016,160202016,160202016,160202017,160202017,160202017,160308015,160002042,160202018,160202050,160202024,160005043,160001046,160003058,160002048,160303032,160202029,160202020}
s.Pack[2][2][6][2]={}
s.Pack[2][2][6][3]={}
s.Pack[2][2][6][4]={}
s.Pack[2][2][6][5]={}
s.Pack[2][2][6][10]=40


--Asana - Pride of the Heavy Mequestrian Style
s.Pack[2][2][7]={}
s.Pack[2][2][7][0]=1999020207
s.Pack[2][2][7][1]={160004022,160004021,160004023,160004024,160004032,160006026,160005034,160004003,160004003,160004003,160006007,160309010,160309011,160005037,160005037,160005037,160004002,160004002,160005008,160412008,160004006,160309017,160004025,160004001,160004001,160004001,160406007,160309021,160002042,160412004,160406010,160001043,160203030,160309027,160002046,160004053,160004053,160004054,160203033,160303032}
s.Pack[2][2][7][2]={}
s.Pack[2][2][7][3]={}
s.Pack[2][2][7][4]={}
s.Pack[2][2][7][5]={}
s.Pack[2][2][7][10]=40


--Hyperspeed Rush Road!!
s.Pack[2][3][1]={}
s.Pack[2][3][1][0]=1999020301
s.Pack[2][3][1][1]={160001001,160001002,160001003,160001004,160001005,160001006,160001007,160001008,160001009,160001010,160001019,160001020,160001032,160001035,160001037,160001038,160001040,160001042,160001043,160001044,160001048,160001050}
s.Pack[2][3][1][2]={160001011,160001012,160001013,160001014,160001015,160001016,160001017,160001024,160001025,160001031,160001033,160001034,160001039,160001045,160001046,160001047}
s.Pack[2][3][1][3]={160001000,160301001,160302001,160001018,160001022,160001030,160001036,160001041,160001049}
s.Pack[2][3][1][4]={160401001,160001026,160001028,160001029}
s.Pack[2][3][1][5]={}
s.Pack[2][3][1][10]=5


--Shocking Lightning Attack!!
s.Pack[2][3][2]={}
s.Pack[2][3][2][0]=1999020302
s.Pack[2][3][2][1]={160002002,160002003,160002004,160002006,160002007,160002009,160002010,160002012,160002013,160002014,160002015,160002024,160002026,160002037,160002038,160002040,160002041,160002043,160002044,160002045,160002049,160002050}
s.Pack[2][3][2][2]={160002001,160002005,160002008,160002011,160002019,160002020,160002023,160301004,160002033,160002034,160002035,160002036,160002039,160002042,160002046,160002048}
s.Pack[2][3][2][3]={160002000,160002017,160002031,160002016,160002027,160002028,160002029,160002030,160002047}
s.Pack[2][3][2][4]={160002018,160002021,160002022,160002025}
s.Pack[2][3][2][5]={}
s.Pack[2][3][2][10]=5


--Fantastrike Mirage Impact!!
s.Pack[2][3][3]={}
s.Pack[2][3][3][0]=1999020303
s.Pack[2][3][3][1]={160003002,160003003,160003004,160003005,160003006,160003007,160003008,160003012,160003015,160003017,160003020,160003026,160003027,160003028,160003030,160003036,160003039,160003043,160003044,160003046,160003045,160003048,160003049,160003050,160003051,160003055,160003057,160003059,160003060}
s.Pack[2][3][3][2]={160003001,160003009,160003010,160003011,160003013,160003019,160003021,160003029,160003034,160003035,160003037,160003038,160003047,160003052,160003053,160003056,160003058}
s.Pack[2][3][3][3]={160003000,160003018,160003025,160003014,160003016,160003022,160003023,160003032,160003042}
s.Pack[2][3][3][4]={160003054,160003024,160003031,160003033,160003040}
s.Pack[2][3][3][5]={}
s.Pack[2][3][3][10]=5


--Destined Power Destruction!!
s.Pack[2][3][4]={}
s.Pack[2][3][4][0]=1999020304
s.Pack[2][3][4][1]={160004001,160004003,160004004,160004006,160004007,160004008,160004009,160004010,160004011,160004012,160004013,160004014,160004016,160004018,160004026,160004027,160004033,160004035,160004036,160004039,160004045,160004046,160004047,160004054,160004055,160004056,160004057,160004058,160004059}
s.Pack[2][3][4][2]={160004002,160004005,160004019,160004025,160004028,160004030,160004031,160004034,160004037,160004038,160004040,160004041,160004043,160004044,160004048,160004050,160004053}
s.Pack[2][3][4][3]={160004000,160004015,160004024,160004017,160004032,160004042,160004049,160004051,160004052,160004060}
s.Pack[2][3][4][4]={160004020,160004021,160004022,160004023,160004029}
s.Pack[2][3][4][5]={}
s.Pack[2][3][4][10]=5


--Dynamic Eternal Live!!
s.Pack[2][3][5]={}
s.Pack[2][3][5][0]=1999020305
s.Pack[2][3][5][1]={160005003,160005004,160005006,160005007,160005008,160005009,160005010,160005012,160005018,160005021,160005023,160005027,160005028,160005033,160005036,160005037,160005040,160005041,160005043,160005045,160005048,160005049,160005050,160005051,160005055,160005056,160005058,160005059,160005060,160005063,160005064}
s.Pack[2][3][5][2]={160005001,160005005,160005011,160005017,160005020,160005022,160005025,160005030,160005032,160005034,160005039,160005042,160005046,160005047,160005053,160005054,160005057,160005062}
s.Pack[2][3][5][3]={160005000,160401004,160403002,160005029,160005035,160005038,160005044,160005052,160005061,160005065}
s.Pack[2][3][5][4]={160005014,160005015,160005016,160005031,160005013,160005019,160005024}
s.Pack[2][3][5][5]={}
s.Pack[2][3][5][10]=5


--Fierce Thunder Storm!!
s.Pack[2][3][6]={}
s.Pack[2][3][6][0]=1999020306
s.Pack[2][3][6][1]={160006002,160006003,160006004,160006005,160006007,160006008,160006009,160006011,160006012,160006016,160006020,160006023,160006029,160006031,160006032,160006033,160006034,160006044,160006047,160006048,160006049,160006050,160006051,160006052,160006056,160006057,160006058,160006059,160006062,160006063,160006065}
s.Pack[2][3][6][2]={160006001,160006006,160006010,160006013,160006021,160006026,160006027,160006028,160006030,160006035,160006036,160006039,160006042,160006043,160006046,160006054,160006055,160006061}
s.Pack[2][3][6][3]={160006000,160006014,160006018,160006019,160006025,160006037,160006041,160006045,160006053,160006060}
s.Pack[2][3][6][4]={160006024,160006038,160006040,160006064,160006015,160006017,160006022}
s.Pack[2][3][6][5]={}
s.Pack[2][3][6][10]=5


--Chaotic Omega Rising!!
s.Pack[2][3][7]={}
s.Pack[2][3][7][0]=1999020307
s.Pack[2][3][7][1]={160007001,160007003,160007004,160007005,160007006,160007007,160007008,160007010,160007012,160007013,160007018,160007019,160007021,160007023,160007025,160007026,160007029,160007031,160007042,160007046,160007049,160007051,160007054,160007055,160007057,160007058,160007059,160007060,160007061,160007062,160007063}
s.Pack[2][3][7][2]={160007002,160007009,160007014,160007016,160007022,160007030,160007033,160007038,160007039,160007040,160007041,160007043,160007044,160007047,160007048,160007050,160007056,160007064}
s.Pack[2][3][7][3]={160007000,160007011,160007015,160007017,160007024,160007027,160007034,160007037,160007045,160007065}
s.Pack[2][3][7][4]={160007028,160007032,160007052,160007053,160007020,160007035,160007036}
s.Pack[2][3][7][5]={}
s.Pack[2][3][7][10]=5


--Genesis Master Road!!
s.Pack[2][3][8]={}
s.Pack[2][3][8][0]=1999020308
s.Pack[2][3][8][1]={160008002,160008003,160008005,160008006,160008008,160008013,160008015,160008020,160008023,160008024,160008025,160008028,160008029,160008035,160008040,160008041,160008042,160008045,160008046,160008047,160008049,160008050,160008054,160008055,160008056,160008058,160008059,160008061,160008063,160008064,160008065}
s.Pack[2][3][8][2]={160008001,160008004,160008007,160008009,160008010,160008017,160008019,160008021,160008027,160008030,160008037,160008038,160008039,160008043,160008044,160008052,160008053,160008060}
s.Pack[2][3][8][3]={160008000,160008011,160008012,160008014,160008016,160008018,160008034,160008048,160008051,160008062}
s.Pack[2][3][8][4]={160008026,160008031,160008036,160008057,160008022,160008032,160008033}
s.Pack[2][3][8][5]={}
s.Pack[2][3][8][10]=5
